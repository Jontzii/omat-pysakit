name: Deploy frontend

on:
    push:
        branches:
            - main
        paths:
            - 'frontend/**'
            - '.github/workflows/deploy_frontend.yml'

    workflow_dispatch:

env:
    PROJECT_ID: ${{ secrets.GCP_PROJECT }}
    PROJECT_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
    PROJECT_WIP: ${{ secrets.GCP_PROJECT_WIP }}
    PROJECT_REGISTRY: ${{ secrets.GAR_REGISTRY }}
    REPOSITORY: omat-pysakit
    CLOUD_RUN_SERVICE: omat-pysakit-frontend
    IMAGE: frontend

jobs:
    check-style:
        name: Check code style
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@main
            - uses: actions/setup-node@main
              with:
                  node-version: 16
                  cache: npm
            - run: npm ci
            - run: npm run check-style-frontend

    frontend-build:
        name: Build frontend
        runs-on: ubuntu-latest
        needs: check-style

        defaults:
            run:
                working-directory: frontend

        steps:
            - uses: actions/checkout@main
            - uses: actions/setup-node@main
              with:
                  node-version: 16
                  cache: npm
            - run: npm ci
            - run: npm run build:ci

    frontend-test:
        name: Test frontend
        runs-on: ubuntu-latest
        needs: frontend-build

        defaults:
            run:
                working-directory: frontend

        steps:
            - uses: actions/checkout@main
            - uses: actions/setup-node@main
              with:
                  node-version: 16
                  cache: npm
            - run: npm ci
            - run: npm run test:ci
            - uses: codecov/codecov-action@v2
              with:
                  flags: unittests,frontend
                  fail_ci_if_error: true

    frontend-push-gcp:
        name: Build and push frontend to GAR
        needs: frontend-test
        runs-on: ubuntu-latest

        permissions:
            contents: 'read'
            id-token: 'write'

        steps:
            - uses: actions/checkout@v2

            - id: 'auth'
              name: 'Authenticate to Google Cloud'
              uses: 'google-github-actions/auth@v0'
              with:
                  project_id: ${{ env.PROJECT_ID }}
                  workload_identity_provider: ${{ env.PROJECT_WIP }}
                  service_account: ${{ env.PROJECT_SERVICE_ACCOUNT }}
                  token_format: 'access_token'

            - name: Login to GAR
              uses: docker/login-action@v1
              with:
                  registry: ${{ env.PROJECT_REGISTRY }}
                  username: oauth2accesstoken
                  password: ${{ steps.auth.outputs.access_token }}

            - name: Build image
              run: |
                  docker build \
                    --tag "$PROJECT_REGISTRY/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
                    --build-arg GITHUB_SHA="$GITHUB_SHA" \
                    --build-arg GITHUB_REF="$GITHUB_REF" \
                    ./frontend

            - name: Push image
              run: docker push "$PROJECT_REGISTRY/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

    frontend-deploy-gcp:
        name: Deploy frontend to Cloud Run
        needs: frontend-push-gcp
        runs-on: ubuntu-latest

        permissions:
            contents: 'read'
            id-token: 'write'

        steps:
            - uses: actions/checkout@v2

            - id: 'auth'
              name: 'Authenticate to Google Cloud'
              uses: 'google-github-actions/auth@v0'
              with:
                  project_id: ${{ env.PROJECT_ID }}
                  workload_identity_provider: ${{ env.PROJECT_WIP }}
                  service_account: ${{ env.PROJECT_SERVICE_ACCOUNT }}

            - id: 'deploy'
              uses: 'google-github-actions/deploy-cloudrun@v0'
              with:
                  service: ${{ env.CLOUD_RUN_SERVICE }}
                  image: '${{ env.PROJECT_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}'
                  region: 'europe-north1'
                  project_id: ${{ env.PROJECT_ID }}
